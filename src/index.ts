/**
 * Advanced Client Fetch - Modern HTTP client with fetch-first design
 * 
 * @example
 * ```typescript
 * import { createClient } from 'advanced-client-fetch';
 * 
 * const client = createClient({
 *   baseURL: 'https://api.example.com',
 *   plugins: [retry(), timeout(5000), cache()]
 * });
 * 
 * const data = await client.get('/users');
 * ```
 */

// Re-export core functionality
export {
  createClient,
  createDefaultClient,
  createClientFor,
  compose,
  parallel,
  conditional,
  once,
  withErrorHandling,
  withTiming,
  withLogging,
  combineSignals,
  combineTimeoutAndSignal,
  createTimeoutSignal,
  // Core types
  type Client,
  type ClientOptions,
  type RequestOptions,
  type ResponseType,
  type HttpMethod,
  type RetryOptions,
  type RetryInfo,
  type CacheOptions,
  type CacheStorage,
  type Transport,
  type Context,
  type Middleware,
  type HttpError,
  type AbortError,
  type Interceptor,
  type Metrics,
  type SecurityOptions,
  type Cookie,
  type CookieOptions,
  type CookieJar,
  type NodeAgentOptions,
  type ProxyConfig,
  type NodeSslOptions,
  type StreamOptions,
  type RetryPluginOptions,
  type CachePluginOptions,
  type RateLimitPluginOptions,
  type CircuitBreakerPluginOptions,
  type DedupePluginOptions,
  type MetricsPluginOptions,
  type CircuitBreakerInfo,
  type RateLimitInfo,
  type DedupeEntry,
  type KeyGeneratorOptions,
  type BasePluginOptions,
  type PluginHooks,
  type PluginImplementation,
  type PerformanceMetrics,
  type BuildOptions,
  type BundleAnalysis,
  type OptimizationConfig,
  // Error classes
  AdvancedClientFetchError,
  AdvancedClientFetchAbortError,
  TimeoutError,
  NetworkError,
  RetryError,
  ValidationError,
  ConfigurationError,
  RateLimitError,
  CircuitBreakerError,
  // Utility functions
  isPlainObject,
  isURL,
  isHeaders,
  isIdempotentMethod,
  buildURL,
  mergeHeaders,
  normalizeBody,
  generateRequestId,
  deepMerge,
  sleep,
  calculateBackoffDelay,
  parseRetryAfter,
  isAbsoluteURL,
  getContentType,
  isJSONResponse,
  isTextResponse,
  safeJSONParse,
  cloneRequest,
  getRequestSize,
  getResponseSize,
  isRetryableError,
  isRetryableResponse,
  calculateRetryDelay,
  waitForRetry,
  createAttemptSignal,
  createKeyGenerator,
  hashKey,
  defaultKeyGenerator,
  simpleKeyGenerator,
  bodyAwareKeyGenerator,
  headerAwareKeyGenerator,
} from '@advanced-client-fetch/core';

// Re-export plugins
export {
  retry,
  createRetryMiddleware,
  retryIdempotent,
  retryAll,
  retryAggressive,
  retryConservative,
  timeout,
  requestTimeout,
  globalTimeout,
  timeoutWithMessage,
  timeoutForMethods,
  timeoutWithBackoff,
  timeoutWithRetryAfter,
  timeoutWithCircuitBreaker,
  timeoutPerAttempt,
  totalTimeout,
  timeoutByMethod,
  cache,
  cacheWithSWR,
  cacheByContentType,
  cacheWithCustomTTL,
  MemoryCacheStorage,
  rateLimit,
  tokenBucketRateLimit,
  slidingWindowRateLimit,
  adaptiveRateLimit,
  circuitBreaker,
  circuitBreakerWithCustomDetection,
  adaptiveCircuitBreaker,
  dedupe,
  dedupeWithCustomKey,
  dedupeWithBody,
  dedupeWithHeaders,
  getDedupeStats,
  clearDedupeCache,
  metrics,
  metricsWithCollector,
  metricsWithLogging,
  metricsWithJSONLogging,
  metricsWithFormatter,
  metricsWithAggregation,
  metricsWithHistogram,
  // Plugin types
  type RetryPluginOptions as RetryOptions,
  type TimeoutPluginOptions,
  type CachePluginOptions as CacheOptions,
  type RateLimitPluginOptions as RateLimitOptions,
  type CircuitBreakerPluginOptions as CircuitBreakerOptions,
  type DedupePluginOptions as DedupeOptions,
  type MetricsPluginOptions as MetricsOptions,
} from '@advanced-client-fetch/plugins';

// Re-export presets
export {
  // Node.js presets
  createNodeClient,
  createMinimalNodeClient,
  createAPIServerClient,
  createDatabaseClient,
  createMicroserviceClient,
  createBatchClient,
  createRealTimeClient,
  createStreamingClient,
  createWebSocketClient,
  createServerlessClient,
  createFullNodeClient,
  createProductionNodeClient,
  createDevelopmentNodeClient,
  createTestNodeClient,
  createNodeClientWithFeatures,
  createMicroserviceNodeClient,
  createAPIGatewayNodeClient,
  nodeClient,
  // Edge presets
  createEdgeClient,
  createEdgeClientWithRetry,
  createEdgeClientWithTimeout,
  createEdgeClientWithDedupe,
  createEdgeClientWithMetrics,
  createCloudflareWorkersClient,
  createVercelEdgeClient,
  createDenoDeployClient,
  createBunEdgeClient,
  createMinimalEdgeClient,
  createFullEdgeClient,
  createAPIGatewayClient,
  createCDNClient,
  createEdgeWebSocketClient,
  createEdgeRealTimeClient,
  createEdgeStreamingClient,
  createEdgeBatchClient,
  createEdgeMicroserviceClient,
  createEdgeServerlessClient,
  edgeClient,
  // Browser presets
  createBrowserClient,
  createMinimalBrowserClient,
  createFullBrowserClient,
  createSPAClient,
  createPWAClient,
  createBrowserClientWithRetry,
  createBrowserClientWithTimeout,
  createBrowserClientWithDedupe,
  createBrowserClientWithMetrics,
  createDevelopmentBrowserClient,
  createProductionBrowserClient,
  createTestBrowserClient,
  createMobileBrowserClient,
  createDesktopBrowserClient,
  createWebWorkerClient,
  createServiceWorkerClient,
  browserClient,
  // Deno presets
  createDenoClient,
  createMinimalDenoClient,
  createFullDenoClient,
  createDenoDeployClient,
  createDenoCLIClient,
  createDenoFreshClient,
  createDenoOakClient,
  createDenoHonoClient,
  createDenoClientWithRetry,
  createDenoClientWithTimeout,
  createDenoClientWithDedupe,
  createDenoClientWithMetrics,
  createDevelopmentDenoClient,
  createProductionDenoClient,
  createTestDenoClient,
  createServerlessDenoClient,
  createMicroserviceDenoClient,
  createAPIGatewayDenoClient,
  createCDNDenoClient,
  createWebSocketDenoClient,
  createRealTimeDenoClient,
  createStreamingDenoClient,
  createBatchDenoClient,
  denoClient,
  // Bun presets
  createBunClient,
  createMinimalBunClient,
  createFullBunClient,
  createBunEdgeClient,
  createBunCLIClient,
  createBunFreshClient,
  createBunHonoClient,
  createBunElysiaClient,
  createBunClientWithRetry,
  createBunClientWithTimeout,
  createBunClientWithDedupe,
  createBunClientWithMetrics,
  createDevelopmentBunClient,
  createProductionBunClient,
  createTestBunClient,
  createServerlessBunClient,
  createMicroserviceBunClient,
  createAPIGatewayBunClient,
  createCDNBunClient,
  createWebSocketBunClient,
  createRealTimeBunClient,
  createStreamingBunClient,
  createBatchBunClient,
  bunClient,
  // Preset types
  type NodePresetOptions,
  type EdgePresetOptions,
  type BrowserPresetOptions,
  type DenoPresetOptions,
  type BunPresetOptions,
} from '@advanced-client-fetch/presets';

// Re-export axios adapter
export {
  createAxiosAdapter,
  createAdapter,
  createAxiosInstance,
  // Axios types
  type AxiosRequestConfig,
  type AxiosResponse,
  type AxiosError,
  type AxiosInstance,
  type AxiosInterceptorManager,
  type CancelToken,
  type Cancel,
  type Canceler,
  type CancelTokenSource,
  type CancelTokenStatic,
  type AxiosStatic,
} from '@advanced-client-fetch/axios-adapter';

// Default export
export default createClient;
